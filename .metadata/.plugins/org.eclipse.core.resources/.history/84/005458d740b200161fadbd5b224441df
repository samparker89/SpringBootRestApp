package com.samparker.test;

import static org.junit.Assert.assertThat;

import static org.hamcrest.Matchers.*;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;   
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.MediaType;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;

import com.samparker.DAO.CustomerDAO;
import com.samparker.DOM.Customer;

@RunWith(SpringRunner.class)
@SpringBootTest
@AutoConfigureMockMvc
public class CustomerDetailsControllerTest {

	@Autowired
	private MockMvc mvc;
	
	@Autowired
	private CustomerDAO customerDAO;
	
	private static final String JSON_STRING = "{"
			+ "\"customer\" : {"
			+ "\"firstName\":\"sam\","
			+ "\"lastName\":\"parker\";"
			+ "}"
			+ "}";
	
	@Test
	public void getCustomerReturnsCorrectCustomerTest() throws Exception {
		
		mvc.perform(MockMvcRequestBuilders.get("/addCustomer").accept(MediaType.APPLICATION_JSON).content(JSON_STRING))
		.andExpect(status().isOk())
		.andExpect(content().string(equalTo(JSON_STRING)));
		
		assertThat(customerDAO.findOne(1L), equalTo(new Customer("Sam", "Parker")));
	}

}
